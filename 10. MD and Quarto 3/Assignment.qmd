```{python}
#| tags: [parameters]
#| code-fold: true
season = 1
```

```{python}
#| code-fold: true

import pandas as pd
import os
from datetime import datetime

results = {}


data_file = f"../Data/season_{season}.csv"

if not os.path.exists(data_file):
    raise FileNotFoundError(f"Data for season {season} not found!")

season_data = pd.read_csv(data_file)

if season_data.empty:
    raise ValueError(f"Data object 'season_data' is empty in {data_file}")

season_data['premiere_date'] = pd.to_datetime(
    season_data['premiere_date'].str.split("(").str[1].str.split(")").str[0]
)

num_episodes = season_data['no_season'].max()
start_date = season_data['premiere_date'].min().strftime('%B %d')
end_date = season_data['premiere_date'].max().strftime('%B %d')
year = season_data['premiere_date'].max().strftime('%Y')

avg_viewers = round(season_data['viewers'].mean(),3)
min_viewers = round(season_data['viewers'].min(),2)
max_viewers = season_data['viewers'].max()

top_episode = season_data[season_data['viewers'] == max_viewers].iloc[0]

results[season] = {
    'num_episodes': num_episodes,
    'start_date': start_date,
    'end_date': end_date,
    'year': year,
    'avg_viewers': avg_viewers,
    'min_viewers': min_viewers,
    'max_viewers': max_viewers,
    'top_episode_title': top_episode['title'],
    'top_episode_description': top_episode['description'],
    'highlighted_episodes': season_data[season_data['viewers'] > avg_viewers][
        ['no_season', 'title', 'directed_by']
    ].rename(columns={'no_season': 'No. in season', 'directed_by': 'Director'})
}
# 打印结果看看有没有问题


```

---
title: "Game of Thrones - Season `{python} season` Summary"
author: "Jiayu Ban"
date: today
engine: python
output: 
  html_document:
    toc: false
  pdf_document:
    toc: false
---


# Game of Thrones - Season `{python} season` summary in numbers

### __(*Warning:* spoilers ahead)__

***

### Overview

(From the [Wikipedia](https://en.wikipedia.org/wiki/Game_of_Thrones#Premise)) Game of Thrones is an American fantasy drama television series created by David Benioff and D. B. Weiss for HBO. It is an adaptation of A Song of Ice and Fire, a series of fantasy novels by George R. R. Martin, the first of which is A Game of Thrones.

Set on the fictional continents of Westeros and Essos, Game of Thrones has a large ensemble cast and follows several story arcs throughout the course of the show. A major arc concerns the Iron Throne of the Seven Kingdoms of Westeros through a web of political conflicts among the noble families either vying to claim the throne or fighting for independence from it. Another focuses on the last descendant of the realm's deposed ruling dynasty, who has been exiled to Essos and is plotting a return to the throne. A third story arc follows the Night's Watch, a military order defending the realm against threats from the North.

***

### Season `{python} season`  summary

Season `{python} season` of Game of Thrones consisted of `{python} int(results[season] ['num_episodes'])` episodes that aired between `{python} results[season] ['start_date']` and `{python} results[season] ['end_date']`, `{python} results[season] ['year']` on HBO. The show gathered an average of `{python} int(results[season] ['avg_viewers'])` million first-day TV viewers in the US, with the number growing from `{python} int(results[season] ['min_viewers'])` to `{python} int(results[season] ['max_viewers'])`  million by the end of the season.

The most popular episode of the season was `{python} results[season]['top_episode_title']`, in which:

> `{python} results[season] ['top_episode_description']`

***

You can see how the viewership of the episodes changed in Figure 1.

```{python}
#| code-fold: true
#| label: viewers_plot

import matplotlib.pyplot as plt
plt.figure(figsize=(10, 5))
plt.plot(season_data['no_season'], 
         season_data['viewers'],
         color='red',
         linewidth=2,
         marker='o')
plt.xticks(season_data['no_season'])
plt.title(f"Season {season} Viewership")
plt.grid(True)
plt.show()

```

***

Finally, the episodes with the above-average viewership were:


```{python}
#| code-fold: true
#| echo: false

!pip install tabulate
from tabulate import tabulate

highlighted_episodes = season_data[season_data['viewers'] > avg_viewers]
print(tabulate(
    highlighted_episodes[['no_season', 'title', 'directed_by']],
    headers=['Episode', 'Title', 'Director'],
    tablefmt='pipe'
))
```
